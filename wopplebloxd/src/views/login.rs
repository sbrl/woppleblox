use actix_web::HttpRequest;
use fluent::{ FluentArgs };

use crate::global_state::GlobalState;
use crate::templates::{ PageParametersMain, TemplateLogin };
use crate::helpers_actix::HttpRequestHelper;
// Probably dynamically generated by a macro
use crate::yarte::Template;
use crate::helpers_templating::PageRenderer;


pub struct ViewLogin;

impl ViewLogin {
	pub fn render(global_state: GlobalState, req: HttpRequest) -> String {
		let template = TemplateLogin {
			str_label_username: &global_state.tr.translate_simple(
				&req.get_req_lang(),
				"str_label_username"
			).unwrap(),
			str_label_password: &global_state.tr.translate_simple(
				&req.get_req_lang(),
				"str_label_password"
			).unwrap(),
			str_button_login: &global_state.tr.translate_simple(
				&req.get_req_lang(),
				"str_button_login"
			).unwrap(),
		};
		
		PageRenderer::render_main(
			&global_state, &req,
			&PageParametersMain { title_code: "title_login" },
			&template
		)
	}
}
